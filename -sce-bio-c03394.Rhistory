(pval_violin_plot / test_bar_plot) | (bar_plot / (example_plots[[1]]|example_plots[[2]]|example_plots[[3]]|example_plots[[4]]) / overlap_plot_all)
patchwork <- (pval_violin_plot / test_bar_plot) | (bar_plot / examples / overlap_plot_all)
patchwork + plot_annotation(tag_levels = 'A')
label<-c("Low Overlap", "High Overlap","1 Peak","1 Component")
title<-c("S.agalactiae + CIP", "K.pneumoniae + CST", "E.coli + C/T", "C.jejuni + SXT")
title_col<-c("mediumpurple","mediumseagreen","goldenrod","mediumvioletred")
examples<-c(
"Streptococcus agalactiae_Ciprofloxacin",
"Klebsiella pneumoniae_Colistin",
"Escherichia coli_Ceftolozane-tazobactam",
"Campylobacter jejuni_Trimethoprim-sulfamethoxazole "
)
example_results<-data.frame()
example_plots<-list()
example_results<-data.frame()
example_plots<-list()
for (i in 1:length(examples)){
data<-filter(data_ECOFF,Bacteria_Antibiotic==examples[i])
X<-dplyr::select(data,min,MIC,freq) %>% mutate(min=log2(min)) %>% mutate(MIC=log2(MIC))
X_reinstate<-reinstate(as.matrix(X))
b<-mixfit(X_reinstate,ncomp=2,ev=FALSE)
u<-mixfit(X_reinstate,ncomp=1)
# Are there 2 peaks in the bimodal curve?
df2<-data.frame(x=density(b)$x,y=density(b)$y) %>%  mutate(Diff = y - lag(y))
df2$Diff[1]<-0
for (j in 1:(nrow(df2)-1)){if(df2$Diff[j]<0 & df2$Diff[j+1]>0){peaks<-"2 Peaks"
break}else{peaks<-"1 Peak"}}
# Overlap
prop_overlap<-ifelse(is.null(b)==F,max( sum(pmin(density(b)$comp[,1],density(b)$comp[,2]))/sum(density(b)$comp[,1]) , sum(pmin(density(b)$comp[,1],density(b)$comp[,2]))/sum(density(b)$comp[,2]) ),NA)
# Probability Best
uBIC<-ifelse(is.null(u)==F,u$bic,NA)
bBIC<-ifelse(is.null(b)==F,b$bic,NA)
ri<-exp((min(uBIC,bBIC)-max(uBIC,bBIC))/2)
prob_best<-ri/(ri+1)
ECOFF<-unique(data$ECOFF)
X<-filter(X,freq!=0)
X_reinstate_df<-data.frame(X_reinstate)
X_reinstate_df$colour<-ifelse(X_reinstate_df$X_reinstate<=log2(ECOFF),"dodgerblue","firebrick")
if(b$bic<u$bic){df_density<-data.frame(x=density(b)$x,y_all=density(b)$y,y_s=density(b)$comp[,1],y_r=density(b)$comp[,2])
}else{df_density<-data.frame(x=density(u)$x,y_all=density(u)$y,y_s=density(u)$y,y_r=density(u)$y)}
example_plots[[i]]<-ggplot(data=X_reinstate_df,aes(x=X_reinstate)) +
geom_histogram(breaks=unique(c(X$min,X$MIC)),aes(fill=colour,y=stat(count)/sum(stat(count))),colour="white",size=0.1) +
scale_fill_manual(values=c("dodgerblue","firebrick"))+
geom_polygon(data=df_density,aes(x=x,y=y_s),fill="dodgerblue",alpha=0.3) +
geom_polygon(data=df_density,aes(x=x,y=y_r),fill="firebrick",alpha=0.3) +
geom_line(data=df_density,aes(x=x,y=y_s),colour="dodgerblue3",size=0.5) +
geom_line(data=df_density,aes(x=x,y=y_r),colour="firebrick3",size=0.5) +
geom_line(data=df_density,aes(x=x,y=y_all),linetype="dashed",size=0.5) +
theme_void() +
labs(title=label[i],subtitle=title[i],x=NULL, y=NULL) +
theme(plot.title = element_text(hjust = 0.5,size=10,colour = title_col[i]),plot.subtitle = element_text(hjust = 0.5,size=8),legend.position="none")
example_results<-rbind(example_results,data.frame(Bacteria_Antibiotic=examples[i],
ECOFF,
distributions=unique(data$Distributions),
observations=unique(data$Observations),
resistance_freq=sum(filter(X,MIC>log2(ECOFF))$freq)/sum(X$freq),
best_model=ifelse(uBIC<bBIC,"Unimodal","Bimodal"),
unimodalBIC=ifelse(is.null(u)==F,u$bic,NA),
bimodalBIC=ifelse(is.null(b)==F,b$bic,NA),
prob_best,
peaks,
prop_overlap))
}
examples<-ggarrange(example_plots[[1]],example_plots[[2]],example_plots[[3]],example_plots[[4]],nrow=1)
patchwork <- (pval_violin_plot / test_bar_plot) | (bar_plot / examples / overlap_plot_all)
patchwork + plot_annotation(tag_levels = 'A')
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 'bold'))
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 'roman'))
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 'normal'))
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 1))
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 2))
setwd("~/OneDrive - University of Edinburgh/Quantitative_Resistance/Quantitative_Resistance")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidyr)
library(stringr)
library(seqinr)
library(easyPubMed)
library(patchwork)
library(gridExtra)
library(ggpubr)
library(ggtext)
GWAS_data<-read.csv("GWAS_data.csv") %>% filter(value!=0)
GWAS_mutations<-filter(GWAS_data,gene_mutation=="mutation",value!=0)
GWAS_genes<-filter(GWAS_data,gene_mutation=="gene",value!=0)
gwas_genes_mutations<-ggplot(GWAS_data,aes(x=log10(value),y=method))+
geom_boxplot(aes(fill=gene_mutation),alpha=0.8)+
scale_fill_manual(name="",values=c("mediumseagreen","mediumpurple"),labels=c("Gene","Mutation"))+
theme_light()+
theme(legend.position="none")+
labs(x="Log10 (Number of Genes/Mutations)",y="GWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title="Predicted Resistance Genes (bGWAS)",x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_mutations_plot<-ggplot(GWAS_mutations,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title="Predicted Resistance Mutations (bGWAS)",x="Log10 (Number of Mutations)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
heritability<-read.csv("heritability.csv")
heritability_plot<-ggplot(heritability,aes(x=value,y=antibiotic,fill=factor(Heritability, levels=c("h2_missing","h2_explained"))))+
geom_bar(stat="identity",colour="black",position="stack")+
scale_fill_manual(name=NULL,values=c("white","dodgerblue"),labels=c("Missing","Explained"))+
theme_light()+
labs(y="Antibiotic",x="Heritability")+
facet_wrap(~bacteria,scales="free")+
theme(legend.position="bottom")
ggplot(GWAS_data,aes(log10(n)))+
geom_histogram(bins=20,boundary=0,fill="grey")+
theme_light()+
labs(title="GWAS (Distribution of Sample Sizes)",x="Log10 (Sample Size)",y="Frequency")+
theme(plot.title = element_text(hjust = 0.5))
setwd("~/OneDrive - University of Edinburgh/Quantitative_Resistance/Quantitative_Resistance/ResFinder_ARGs")
files<-list.files()
files<-files[grepl( ".fsa", files, fixed = TRUE)]
drug_list<-gsub('.fsa','',files)
gene_nos<-data.frame()
for (i in 1:length(files)){
data<-read.fasta(file = files[i], as.string = TRUE)
gene_nos<-rbind(gene_nos,data.frame(antibiotic=str_to_sentence(drug_list[i]),genes_mutated=length(data)))
}
gene_resfinder<-ggplot(gene_nos,aes(x=log10(genes_mutated),y=antibiotic))+
geom_bar(stat="identity",colour="black",fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title="Known Resistance Genes (ResFinder)",x="Log10 (Number of ARGs)",y="Antibiotic")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(gene_nos$genes_mutated)),colour="mediumseagreen",linetype="dashed")
pubmed_results1<-data.frame()
for (i in 1:nrow(gene_nos)){
pubmed_results1<-pubmed_results1 %>%
rbind(data.frame(antibiotic=gene_nos$antibiotic[i],pubmed=as.numeric(get_pubmed_ids(paste0("(drug resistance, bacterial[MeSH Terms]) AND ",gene_nos$antibiotic[i]))$Count)))
}
gene_nos<-left_join(gene_nos,pubmed_results1)
model<-lm(log10(genes_mutated)~log10(pubmed),data=gene_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(gene_nos$pubmed),max(gene_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  P-Value = ",round(summary(model)$coefficients[2,4],3))
gene_resfinder_pubmed<-ggplot(gene_nos,aes(x=log10(pubmed),y=log10(genes_mutated)))+
geom_point(colour="mediumseagreen")+
theme_light()+
labs(x="Log10 (Number of PubMed Search Results)", y="Log10 (Number of ARGs)")+
geom_line(data=df,aes(x=x,y=y),colour="mediumseagreen")
setwd("~/OneDrive - University of Edinburgh/Quantitative_Resistance/Quantitative_Resistance")
write.csv(gene_nos,file="ResFinder_ARGs_and_PubMed_Search_Results.csv")
setwd("~/OneDrive - University of Edinburgh/Quantitative_Resistance/Quantitative_Resistance/PointFinder_mutations")
folders<-list.files()
mut_nos<-data.frame()
for (i in 1:length(folders)){
setwd(paste("~/OneDrive - University of Edinburgh/Quantitative_Resistance/Quantitative_Resistance/PointFinder_mutations",folders[i],sep="/"))
data<-read.delim2("resistens-overview.txt")[2:7] %>%
mutate(Resistance = strsplit(as.character(Resistance), ",")) %>% unnest(Resistance) %>% mutate(Resistance=trimws(Resistance)) %>% mutate(Resistance=str_to_sentence(Resistance)) %>%
filter(is.na(as.numeric(Codon_pos))==F) %>% filter(is.na(as.numeric(Ref_nuc))==T)
indel<-data %>% filter(Ref_codon=="ins"|Ref_codon=="del") %>% mutate(Res_codon = strsplit(as.character(Res_codon), ",")) %>% unnest(Res_codon) %>% mutate(Res_codon=trimws(Res_codon))
snp<-data %>%  filter(Ref_codon!="ins"&Ref_codon!="del") %>% mutate(Res_codon = strsplit(as.character(Res_codon), ",")) %>% unnest(Res_codon) %>% mutate(Res_codon=trimws(Res_codon))
data<-data.frame(rbind(indel,snp))
mut_nos<-rbind(mut_nos,
data.frame(table(data$Resistance)) %>% rename(codons=Freq) %>%
full_join(data.frame(table(distinct(dplyr::select(data,Gene_name,Codon_pos,Resistance))$Resistance)),by="Var1") %>% rename (mutations=Freq) %>%
full_join(data.frame(table(distinct(dplyr::select(data,Gene_name,Resistance))$Resistance)),by="Var1") %>% rename(genes=Freq) %>% rename(antibiotic=Var1) %>% mutate(bacteria=gsub("_"," ",str_to_title(folders[i])))
)
}
mut_nos$antibiotic<-gsub("Gentamicin c","Gentamicin",mut_nos$antibiotic)
mut_nos$antibiotic<-gsub("Para-aminosalicyclic acid","Para-aminosalicylic acid",mut_nos$antibiotic)
mut_resfinder<-ggplot(mut_nos,aes(x=log10(mutations),y=str_wrap(bacteria,5)))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title="Known Resistance Mutations (PointFinder)",x="Log10 (Number of Chromosomal Mutations)",y="Bacterial Species")+
geom_vline(xintercept=log10(mean(mut_nos$mutations)),colour="mediumpurple",linetype="dashed")
pubmed_results2<-data.frame()
for (i in 1:nrow(mut_nos)){
pubmed_results2<-pubmed_results2 %>%
rbind(data.frame(antibiotic=mut_nos$antibiotic[i],bacteria=mut_nos$bacteria[i],pubmed=as.numeric(get_pubmed_ids(paste0("(drug resistance, bacterial[MeSH Terms]) AND ",mut_nos$antibiotic[i]," AND ",mut_nos$bacteria[i]))$Count)))
}
mut_nos<-left_join(mut_nos,pubmed_results2)
model<-lm(log10(mutations)~log10(pubmed),data=mut_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(mut_nos$pubmed),max(mut_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  nP-Value = ",round(summary(model)$coefficients[2,4],3))
mut_resfinder_pubmed<-ggplot(mut_nos,aes(log10(pubmed),log10(mutations)))+
geom_point(colour="mediumpurple")+
theme_light()+
labs(x="Log10 (Number of PubMed Search Results)", y="Log10 (Number of Chromosomal Mutations)")+
geom_line(data=df,aes(x=x,y=y),colour="mediumpurple")
setwd("~/OneDrive - University of Edinburgh/Quantitative_Resistance/Quantitative_Resistance")
write.csv(gene_nos,file="PointFinder_Mutations_and_PubMed_Search_Results.csv")
A <- mut_resfinder  + gene_resfinder + mut_resfinder_pubmed + gene_resfinder_pubmed
B <- (GWAS_mutations_plot + GWAS_genes_plot) / heritability_plot
A|B
A|B + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 1))
patchwork <- A|B
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 1))
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",10),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",20),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",25),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",20),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_mutations_plot<-ggplot(GWAS_mutations,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Mutations (bGWAS)",20),x="Log10 (Number of Mutations)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
GWAS_mutations_plot<-ggplot(GWAS_mutations,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Mutations (bGWAS)",20),x="Log10 (Number of Mutations)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=12))+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
GWAS_mutations_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",20),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",20),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=12))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",20),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=12))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",20),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_mutations_plot<-ggplot(GWAS_mutations,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Mutations (bGWAS)",20),x="Log10 (Number of Mutations)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10))+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
gwas_genes_mutations<-ggplot(GWAS_data,aes(x=log10(value),y=method))+
geom_boxplot(aes(fill=gene_mutation),alpha=0.8)+
scale_fill_manual(name="",values=c("mediumseagreen","mediumpurple"),labels=c("Gene","Mutation"))+
theme_light()+
theme(legend.position="none")+
labs(x="Log10 (Number of Genes/Mutations)",y="GWAS Method")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",20),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_mutations_plot<-ggplot(GWAS_mutations,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Mutations (bGWAS)",20),x="Log10 (Number of Mutations)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10))+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
heritability_plot<-ggplot(heritability,aes(x=value,y=antibiotic,fill=factor(Heritability, levels=c("h2_missing","h2_explained"))))+
geom_bar(stat="identity",colour="black",position="stack")+
scale_fill_manual(name=NULL,values=c("white","dodgerblue"),labels=c("Missing","Explained"))+
theme_light()+
labs(y="Antibiotic",x="Heritability")+
facet_wrap(~bacteria,scales="free")+
theme(legend.position="bottom")
gene_resfinder<-ggplot(gene_nos,aes(x=log10(genes_mutated),y=antibiotic))+
geom_bar(stat="identity",colour="black",fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Known Resistance Genes (ResFinder)",20),x="Log10 (Number of ARGs)",y="Antibiotic")+
theme(plot.title = element_text(hjust = 0.5,size = 10))+
geom_vline(xintercept=log10(mean(gene_nos$genes_mutated)),colour="mediumseagreen",linetype="dashed")
gene_resfinder_pubmed<-ggplot(gene_nos,aes(x=log10(pubmed),y=log10(genes_mutated)))+
geom_point(colour="mediumseagreen")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",20), y="Log10 (Number of ARGs)")+
geom_line(data=df,aes(x=x,y=y),colour="mediumseagreen")
model<-lm(log10(genes_mutated)~log10(pubmed),data=gene_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(gene_nos$pubmed),max(gene_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  P-Value = ",round(summary(model)$coefficients[2,4],3))
gene_resfinder_pubmed<-ggplot(gene_nos,aes(x=log10(pubmed),y=log10(genes_mutated)))+
geom_point(colour="mediumseagreen")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",20), y="Log10 (Number of ARGs)")+
geom_line(data=df,aes(x=x,y=y),colour="mediumseagreen")
#geom_text(data=data.frame(x=2.5,y=3,lab=title),aes(x=x,y=y,label=title),hjust=0,size=3)
mut_resfinder_pubmed<-ggplot(mut_nos,aes(log10(pubmed),log10(mutations)))+
geom_point(colour="mediumpurple")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",20), y="Log10 (Number of Chromosomal Mutations)")+
geom_line(data=df,aes(x=x,y=y),colour="mediumpurple")
mut_resfinder<-ggplot(mut_nos,aes(x=log10(mutations),y=str_wrap(bacteria,5)))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Known Resistance Mutations (PointFinder)",20),x="Log10 (Number of Chromosomal Mutations)",y="Bacterial Species")+
geom_vline(xintercept=log10(mean(mut_nos$mutations)),colour="mediumpurple",linetype="dashed")+
theme(plot.title = element_text(hjust = 0.5,size = 10))
model<-lm(log10(mutations)~log10(pubmed),data=mut_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(mut_nos$pubmed),max(mut_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  nP-Value = ",round(summary(model)$coefficients[2,4],3))
mut_resfinder_pubmed<-ggplot(mut_nos,aes(log10(pubmed),log10(mutations)))+
geom_point(colour="mediumpurple")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",20), y="Log10 (Number of Chromosomal Mutations)")+
geom_line(data=df,aes(x=x,y=y),colour="mediumpurple")
#geom_text(data=data.frame(x=2.5,y=3,lab=title),aes(x=x,y=y,label=title),hjust=0,size=3)
A <- mut_resfinder  + gene_resfinder + mut_resfinder_pubmed + gene_resfinder_pubmed
B <- (GWAS_mutations_plot + GWAS_genes_plot) / heritability_plot
patchwork <- A|B
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 1))
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_mutations_plot<-ggplot(GWAS_mutations,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Mutations (bGWAS)",30),x="Log10 (Number of Mutations)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10))+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
gene_resfinder<-ggplot(gene_nos,aes(x=log10(genes_mutated),y=antibiotic))+
geom_bar(stat="identity",colour="black",fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Known Resistance Genes (ResFinder)",30),x="Log10 (Number of ARGs)",y="Antibiotic")+
theme(plot.title = element_text(hjust = 0.5,size = 10))+
geom_vline(xintercept=log10(mean(gene_nos$genes_mutated)),colour="mediumseagreen",linetype="dashed")
model<-lm(log10(genes_mutated)~log10(pubmed),data=gene_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(gene_nos$pubmed),max(gene_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  P-Value = ",round(summary(model)$coefficients[2,4],3))
gene_resfinder_pubmed<-ggplot(gene_nos,aes(x=log10(pubmed),y=log10(genes_mutated)))+
geom_point(colour="mediumseagreen")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",30), y=str_wrap("Log10 (Number of ARGs)",30))+
geom_line(data=df,aes(x=x,y=y),colour="mediumseagreen")
#geom_text(data=data.frame(x=2.5,y=3,lab=title),aes(x=x,y=y,label=title),hjust=0,size=3)
mut_resfinder<-ggplot(mut_nos,aes(x=log10(mutations),y=str_wrap(bacteria,5)))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Known Resistance Mutations (PointFinder)",30),x="Log10 (Number of Chromosomal Mutations)",y="Bacterial Species")+
geom_vline(xintercept=log10(mean(mut_nos$mutations)),colour="mediumpurple",linetype="dashed")+
theme(plot.title = element_text(hjust = 0.5,size = 10))
model<-lm(log10(mutations)~log10(pubmed),data=mut_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(mut_nos$pubmed),max(mut_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  nP-Value = ",round(summary(model)$coefficients[2,4],3))
mut_resfinder_pubmed<-ggplot(mut_nos,aes(log10(pubmed),log10(mutations)))+
geom_point(colour="mediumpurple")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",30), y=str_wrap("Log10 (Number of Chromosomal Mutations)",30))+
geom_line(data=df,aes(x=x,y=y),colour="mediumpurple")
#geom_text(data=data.frame(x=2.5,y=3,lab=title),aes(x=x,y=y,label=title),hjust=0,size=3)
A <- mut_resfinder  + gene_resfinder + mut_resfinder_pubmed + gene_resfinder_pubmed
B <- (GWAS_mutations_plot + GWAS_genes_plot) / heritability_plot
patchwork <- A|B
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 1))
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.text = element_text(size=8))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.text = element_text(size=6))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.text.x = element_text(size=6))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.title.x = element_text(size=6))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.title = element_text(size=6))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.title = element_text(size=8))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_genes_plot
GWAS_genes_plot<-ggplot(GWAS_genes,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Genes (bGWAS)",30),x="Log10 (Number of Genes)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.title = element_text(size=8))+
geom_vline(xintercept=log10(mean(GWAS_genes$value,na.rm=T)),colour="mediumseagreen",linetype="dashed")
GWAS_mutations_plot<-ggplot(GWAS_mutations,aes(x=log10(value),y=method))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Predicted Resistance Mutations (bGWAS)",30),x="Log10 (Number of Mutations)",y="bGWAS Method")+
theme(plot.title = element_text(hjust = 0.5,size=10),  axis.title = element_text(size=8))+
geom_vline(xintercept=log10(mean(GWAS_mutations$value,na.rm=T)),colour="mediumpurple",linetype="dashed")
heritability_plot<-ggplot(heritability,aes(x=value,y=antibiotic,fill=factor(Heritability, levels=c("h2_missing","h2_explained"))))+
geom_bar(stat="identity",colour="black",position="stack")+
scale_fill_manual(name=NULL,values=c("white","dodgerblue"),labels=c("Missing","Explained"))+
theme_light()+
labs(y="Antibiotic",x="Heritability")+
facet_wrap(~bacteria,scales="free")+
theme(legend.position="bottom",  axis.title = element_text(size=8))
gene_resfinder<-ggplot(gene_nos,aes(x=log10(genes_mutated),y=antibiotic))+
geom_bar(stat="identity",colour="black",fill="mediumseagreen",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Known Resistance Genes (ResFinder)",30),x="Log10 (Number of ARGs)",y="Antibiotic")+
theme(plot.title = element_text(hjust = 0.5,size = 10),  axis.title = element_text(size=8))+
geom_vline(xintercept=log10(mean(gene_nos$genes_mutated)),colour="mediumseagreen",linetype="dashed")
model<-lm(log10(genes_mutated)~log10(pubmed),data=gene_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(gene_nos$pubmed),max(gene_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  P-Value = ",round(summary(model)$coefficients[2,4],3))
gene_resfinder_pubmed<-ggplot(gene_nos,aes(x=log10(pubmed),y=log10(genes_mutated)))+
geom_point(colour="mediumseagreen")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",30), y=str_wrap("Log10 (Number of ARGs)",30))+
geom_line(data=df,aes(x=x,y=y),colour="mediumseagreen")+
theme(axis.title = element_text(size=8))
mut_resfinder<-ggplot(mut_nos,aes(x=log10(mutations),y=str_wrap(bacteria,5)))+
geom_boxplot(fill="mediumpurple",alpha=0.8)+
theme_light()+
labs(title=str_wrap("Known Resistance Mutations (PointFinder)",30),x="Log10 (Number of Chromosomal Mutations)",y="Bacterial Species")+
geom_vline(xintercept=log10(mean(mut_nos$mutations)),colour="mediumpurple",linetype="dashed")+
theme(plot.title = element_text(hjust = 0.5,size = 10),  axis.title = element_text(size=8))
model<-lm(log10(mutations)~log10(pubmed),data=mut_nos)
c<-model$coef[1]
m<-model$coef[2]
x=log10(seq(min(mut_nos$pubmed),max(mut_nos$pubmed),length=100))
df<-data.frame(x=x,y=m*x+c)
title<-paste0("Estimate = ", round(m,2), ",  nP-Value = ",round(summary(model)$coefficients[2,4],3))
mut_resfinder_pubmed<-ggplot(mut_nos,aes(log10(pubmed),log10(mutations)))+
geom_point(colour="mediumpurple")+
theme_light()+
labs(x=str_wrap("Log10 (Number of PubMed Search Results)",30), y=str_wrap("Log10 (Number of Chromosomal Mutations)",30))+
geom_line(data=df,aes(x=x,y=y),colour="mediumpurple")+
theme(axis.title = element_text(size=8))
A <- mut_resfinder  + gene_resfinder + mut_resfinder_pubmed + gene_resfinder_pubmed
B <- (GWAS_mutations_plot + GWAS_genes_plot) / heritability_plot
patchwork <- A|B
patchwork + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 1))
